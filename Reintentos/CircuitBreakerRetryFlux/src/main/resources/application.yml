resilience4j:
  retry:
    retry-aspect-order: 2
    instances:
      myRetry:
        max-attempts: 3
        wait-duration: 5s
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        retry-exceptions:
         - org.springframework.web.client.RestClientException 
  circuitbreaker:
        instances:
            mockService:
                slidingWindowSize: 3
                slidingWindowType: COUNT_BASED
                waitDurationInOpenState: 50
                #waitInterval: 10000
                failureRateThreshold: 50
                permittedNumberOfCallsInHalfOpenState: 5
                registerHealthIndicator: true
                #register-health-indicator: true
                allowHealthIndicatorToFail: true
            mockServiceDos:
                slidingWindowSize: 3
                slidingWindowType: COUNT_BASED
                waitDurationInOpenState: 50
                #waitInterval: 10000
                failureRateThreshold: 50
                permittedNumberOfCallsInHalfOpenState: 5
                registerHealthIndicator: true
                #register-health-indicator: true
                allowHealthIndicatorToFail: true
        configs:
            default:
                registerHealthIndicator: true

management.health.circuitbreakers.enabled: true
management:
  endpoint:
    health:
        show-details: always

downstream:
    mock:
        base: http://localhost:8086/
        path: v1/mock/downstream
        url: ${downstream.mock.base}${downstream.mock.path}

server:
  port: 8080